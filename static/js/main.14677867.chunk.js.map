{"version":3,"sources":["components/AddEmployee.js","components/Graphs.js","App.js","index.js"],"names":["AddEmployee","employees","setEmployees","showGraphs","setShowGraphs","setMaleInfo","setFemaleInfo","setDestekInfo","setMuhasebeInfo","setAnalizInfo","setYazilimInfo","setYonetimInfo","calculateWorkDays","property","value","workers","filter","employee","workDays","forEach","worker","push","minworkDays","Math","min","maxworkDays","max","total","workDay","round","length","onSubmit","e","preventDefault","startDate","Date","currentTarget","quitDate","floor","abs","name","gender","group","className","htmlFor","type","onClick","minMaleWorkDays","maxMaleWorkDays","averageMaleWorkDays","minFemaleWorkDays","maxFemaleWorkDays","averageFemaleWorkDays","minDestekGroupWorkDays","maxDestekGroupWorkDays","averageDestekGroupWorkDays","minMuhasebeGroupWorkDays","maxMuhasebeGroupWorkDays","averageMuhasebeGroupWorkDays","minAnalizGroupWorkDays","maxAnalizGroupWorkDays","averageAnalizGroupWorkDays","minYazilimGroupWorkDays","maxYazilimGroupWorkDays","averageYazilimGroupWorkDays","minYonetimGroupWorkDays","maxYonetimGroupWorkDays","averageYonetimGroupWorkDays","Graphs","maleInfo","femaleInfo","destekInfo","muhasebeInfo","analizInfo","yazilimInfo","yonetimInfo","graph1","series","data","options","chart","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","graph2","App","useState","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAyLeA,EAvLK,SAAC,GAYd,IAXLC,EAWI,EAXJA,UACAC,EAUI,EAVJA,aACAC,EASI,EATJA,WACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,cACAC,EAKI,EALJA,cACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eA2BA,SAASC,EAAkBC,EAAUC,GACnC,IAAMC,EAAUd,EAAUe,QACxB,SAACC,GAAD,OAAcA,EAASJ,KAAcC,KAEjCI,EAAW,GACjBH,EAAQI,SAAQ,SAACC,GACfF,EAASG,KAAKD,EAAOF,aAGvB,IAAMI,EAAcC,KAAKC,IAAL,MAAAD,KAAYL,GAC1BO,EAAcF,KAAKG,IAAL,MAAAH,KAAYL,GAC5BS,EAAQ,EAIZ,OAHAT,EAASC,SAAQ,SAACS,GAAD,OAAcD,GAASC,KAGjC,CAACN,EAAaG,EAFGF,KAAKM,MAAOF,EAAQT,EAASY,OAAU,IAAM,IAsFvE,OACE,8BACE,uBAAMC,SA9HW,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAY,IAAIC,KAAKH,EAAEI,cAAcF,UAAUpB,OAC/CuB,EAC+B,KAAnCL,EAAEI,cAAcC,SAASvB,MACrB,IAAIqB,KACJ,IAAIA,KAAKH,EAAEI,cAAcC,SAASvB,OAClCI,EAAWK,KAAKe,MACpBf,KAAKgB,IAAIF,EAAWH,GAApB,OAGFhC,EAAa,GAAD,mBACPD,GADO,CAEV,CACEuC,KAAMR,EAAEI,cAAcI,KAAK1B,MAC3B2B,OAAQT,EAAEI,cAAcK,OAAO3B,MAC/B4B,MAAOV,EAAEI,cAAcM,MAAM5B,MAC7BoB,UAAWF,EAAEI,cAAcF,UAAUpB,MACrCuB,SAAUL,EAAEI,cAAcC,SAASvB,MACnCI,SAAUA,OA0GkByB,UAAU,aAAxC,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOC,QAAQ,GAAf,uBACA,uBAAOC,KAAK,OAAOL,KAAK,YAE1B,sBAAKG,UAAU,YAAf,UACE,6CACA,yBAAQH,KAAK,SAAb,UACE,wBAAQ1B,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAGJ,sBAAK6B,UAAU,YAAf,UACE,yCACA,yBAAQH,KAAK,QAAb,UACE,wBAAQ1B,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,+BACA,wBAAQA,MAAM,UAAd,8BAGJ,sBAAK6B,UAAU,YAAf,UACE,oEACA,uBAAOE,KAAK,OAAOL,KAAK,iBAE1B,sBAAKG,UAAU,YAAf,UACE,mFACA,uBAAOE,KAAK,OAAOL,KAAK,gBAE1B,wBAAQK,KAAK,SAASF,UAAU,sBAAhC,qBAEF,qBAAKA,UAAU,sBAAf,SACE,wBAAQE,KAAK,SAASC,QArHV,WAAO,IAAD,EAEtBlC,EAAkB,SAAU,QAFN,mBACjBmC,EADiB,KACAC,EADA,KACiBC,EADjB,OAItBrC,EAAkB,SAAU,UAJN,mBAGjBsC,EAHiB,KAGEC,EAHF,KAGqBC,EAHrB,OAUpBxC,EAAkB,QAAS,UAVP,mBAOtByC,EAPsB,KAQtBC,EARsB,KAStBC,EATsB,OAgBpB3C,EAAkB,QAAS,YAhBP,mBAatB4C,EAbsB,KActBC,EAdsB,KAetBC,EAfsB,OAsBpB9C,EAAkB,QAAS,UAtBP,mBAmBtB+C,EAnBsB,KAoBtBC,EApBsB,KAqBtBC,EArBsB,OA4BpBjD,EAAkB,QAAS,WA5BP,mBAyBtBkD,EAzBsB,KA0BtBC,EA1BsB,KA2BtBC,EA3BsB,OAkCpBpD,EAAkB,QAAS,WAlCP,mBA+BtBqD,EA/BsB,KAgCtBC,EAhCsB,KAiCtBC,EAjCsB,KAoCxB9D,EAAY,CACV0C,kBACAC,kBACAC,wBAGF3C,EAAc,CACZ4C,oBACAC,oBACAC,0BAGF7C,EAAc,CACZ8C,yBACAC,yBACAC,+BAGF/C,EAAgB,CACdgD,2BACAC,2BACAC,iCAGFjD,EAAc,CACZkD,yBACAC,yBACAC,+BAGFnD,EAAe,CACboD,0BACAC,0BACAC,gCAGFrD,EAAe,CACbsD,0BACAC,0BACAC,gCAGF/D,GAAeD,IAuCmCwC,UAAU,qBAAtD,0C,gBCbKyB,EA/JA,SAAC,GAQT,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,WACAC,EAKI,EALJA,WACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMC,EAAS,CACbC,OAAQ,CACN,CACErC,KAAM,QACNsC,KAAM,CACJT,EAASpB,oBACToB,EAAStB,gBACTsB,EAASrB,kBAGb,CACER,KAAM,aACNsC,KAAM,CACJR,EAAWlB,sBACXkB,EAAWpB,kBACXoB,EAAWnB,qBAIjB4B,QAAS,CACPC,MAAO,CACLnC,KAAM,MACNoC,OAAQ,KAEVC,YAAa,CACXC,IAAK,CACHC,YAAY,EACZC,YAAa,MACbC,YAAa,YAGjBC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAM,EACNC,MAAO,EACPC,OAAQ,CAAC,gBAEXC,MAAO,CACLC,WAAY,CACV,qCACA,kCACA,wCAGJC,MAAO,CACLC,MAAO,CACLC,KAAM,4BAGVC,KAAM,CACJC,QAAS,KAKTC,EAAS,CACbvB,OAAQ,CACN,CACErC,KAAM,qCACNsC,KAAM,CACJP,EAAWhB,2BACXiB,EAAad,6BACbe,EAAWZ,2BACXa,EAAYV,4BACZW,EAAYR,8BAGhB,CACE3B,KAAM,sCACNsC,KAAM,CACJP,EAAWjB,uBACXkB,EAAaf,yBACbgB,EAAWb,uBACXc,EAAYX,wBACZY,EAAYT,0BAGhB,CACE1B,KAAM,kCACNsC,KAAM,CACJP,EAAWlB,uBACXmB,EAAahB,yBACbiB,EAAWd,uBACXe,EAAYZ,wBACZa,EAAYV,2BAIlBc,QAAS,CACPC,MAAO,CACLnC,KAAM,MACNoC,OAAQ,KAEVC,YAAa,CACXC,IAAK,CACHC,YAAY,EACZC,YAAa,MACbC,YAAa,YAGjBC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAM,EACNC,MAAO,EACPC,OAAQ,CAAC,gBAEXC,MAAO,CACLC,WAAY,CAAC,SAAU,WAAY,SAAU,oBAAW,eAE1DC,MAAO,CACLC,MAAO,CACLC,KAAM,4BAGVC,KAAM,CACJC,QAAS,KAKf,OACE,sBAAKxD,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oFACA,cAAC,IAAD,CACEoC,QAASH,EAAOG,QAChBF,OAAQD,EAAOC,OACfhC,KAAK,MACL8C,MAAO,IACPV,OAAQ,SAGZ,sBAAKtC,UAAU,WAAf,UACA,gFACE,cAAC,IAAD,CACEoC,QAASqB,EAAOrB,QAChBF,OAAQuB,EAAOvB,OACfhC,KAAK,MACL8C,MAAO,IACPV,OAAQ,aC5GHoB,MA1Cf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNrG,EADM,KACKC,EADL,OAEuBoG,oBAAS,GAFhC,mBAENnG,EAFM,KAEMC,EAFN,OAGmBkG,mBAAS,IAH5B,mBAGNjC,EAHM,KAGIhE,EAHJ,OAIuBiG,mBAAS,IAJhC,mBAINhC,EAJM,KAIMhE,EAJN,OAKuBgG,mBAAS,IALhC,mBAKN/B,EALM,KAKMhE,EALN,OAM2B+F,mBAAS,IANpC,mBAMN9B,EANM,KAMQhE,EANR,OAOuB8F,mBAAS,IAPhC,mBAON7B,EAPM,KAOMhE,EAPN,OAQyB6F,mBAAS,IARlC,mBAQN5B,EARM,KAQOhE,EARP,OASyB4F,mBAAS,IATlC,mBASN3B,EATM,KASOhE,EATP,KAYb,OADA4F,QAAQC,IAAIjC,GAEV,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CACE1C,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,EACfC,YAAaA,EACbC,cAAeA,EACfC,cAAeA,EACfC,gBAAiBA,EACjBC,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,IAEjBR,GACC,cAAC,EAAD,CACEkE,SAAUA,EACVC,WAAYA,EACZC,WAAYA,EACZC,aAAcA,EACdC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,QCnCvB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14677867.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AddEmployee = ({\r\n  employees,\r\n  setEmployees,\r\n  showGraphs,\r\n  setShowGraphs,\r\n  setMaleInfo,\r\n  setFemaleInfo,\r\n  setDestekInfo,\r\n  setMuhasebeInfo,\r\n  setAnalizInfo,\r\n  setYazilimInfo,\r\n  setYonetimInfo,\r\n}) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const startDate = new Date(e.currentTarget.startDate.value);\r\n    const quitDate =\r\n      e.currentTarget.quitDate.value === \"\"\r\n        ? new Date()\r\n        : new Date(e.currentTarget.quitDate.value);\r\n    const workDays = Math.floor(\r\n      Math.abs(quitDate - startDate) / (1000 * 3600 * 24)\r\n    );\r\n\r\n    setEmployees([\r\n      ...employees,\r\n      {\r\n        name: e.currentTarget.name.value,\r\n        gender: e.currentTarget.gender.value,\r\n        group: e.currentTarget.group.value,\r\n        startDate: e.currentTarget.startDate.value,\r\n        quitDate: e.currentTarget.quitDate.value,\r\n        workDays: workDays,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function calculateWorkDays(property, value) {\r\n    const workers = employees.filter(\r\n      (employee) => employee[property] === value\r\n    );\r\n    const workDays = [];\r\n    workers.forEach((worker) => {\r\n      workDays.push(worker.workDays);\r\n    });\r\n\r\n    const minworkDays = Math.min(...workDays);\r\n    const maxworkDays = Math.max(...workDays);\r\n    let total = 0;\r\n    workDays.forEach((workDay) => (total += workDay));\r\n    const averageworkDays = Math.round((total / workDays.length) * 10) / 10;\r\n\r\n    return [minworkDays, maxworkDays, averageworkDays];\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const [minMaleWorkDays, maxMaleWorkDays, averageMaleWorkDays] =\r\n      calculateWorkDays(\"gender\", \"male\");\r\n    const [minFemaleWorkDays, maxFemaleWorkDays, averageFemaleWorkDays] =\r\n      calculateWorkDays(\"gender\", \"female\");\r\n\r\n    const [\r\n      minDestekGroupWorkDays,\r\n      maxDestekGroupWorkDays,\r\n      averageDestekGroupWorkDays,\r\n    ] = calculateWorkDays(\"group\", \"destek\");\r\n\r\n    const [\r\n      minMuhasebeGroupWorkDays,\r\n      maxMuhasebeGroupWorkDays,\r\n      averageMuhasebeGroupWorkDays,\r\n    ] = calculateWorkDays(\"group\", \"muhasebe\");\r\n\r\n    const [\r\n      minAnalizGroupWorkDays,\r\n      maxAnalizGroupWorkDays,\r\n      averageAnalizGroupWorkDays,\r\n    ] = calculateWorkDays(\"group\", \"analiz\");\r\n\r\n    const [\r\n      minYazilimGroupWorkDays,\r\n      maxYazilimGroupWorkDays,\r\n      averageYazilimGroupWorkDays,\r\n    ] = calculateWorkDays(\"group\", \"yazilim\");\r\n\r\n    const [\r\n      minYonetimGroupWorkDays,\r\n      maxYonetimGroupWorkDays,\r\n      averageYonetimGroupWorkDays,\r\n    ] = calculateWorkDays(\"group\", \"yonetim\");\r\n\r\n    setMaleInfo({\r\n      minMaleWorkDays,\r\n      maxMaleWorkDays,\r\n      averageMaleWorkDays,\r\n    });\r\n\r\n    setFemaleInfo({\r\n      minFemaleWorkDays,\r\n      maxFemaleWorkDays,\r\n      averageFemaleWorkDays,\r\n    });\r\n\r\n    setDestekInfo({\r\n      minDestekGroupWorkDays,\r\n      maxDestekGroupWorkDays,\r\n      averageDestekGroupWorkDays,\r\n    });\r\n\r\n    setMuhasebeInfo({\r\n      minMuhasebeGroupWorkDays,\r\n      maxMuhasebeGroupWorkDays,\r\n      averageMuhasebeGroupWorkDays,\r\n    });\r\n\r\n    setAnalizInfo({\r\n      minAnalizGroupWorkDays,\r\n      maxAnalizGroupWorkDays,\r\n      averageAnalizGroupWorkDays,\r\n    });\r\n\r\n    setYazilimInfo({\r\n      minYazilimGroupWorkDays,\r\n      maxYazilimGroupWorkDays,\r\n      averageYazilimGroupWorkDays,\r\n    });\r\n\r\n    setYonetimInfo({\r\n      minYonetimGroupWorkDays,\r\n      maxYonetimGroupWorkDays,\r\n      averageYonetimGroupWorkDays,\r\n    });\r\n\r\n    setShowGraphs(!showGraphs);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"submitForm\">\r\n        <div className=\"formGroupContainer1\">\r\n          <div className=\"formGroup\">\r\n            <label htmlFor=\"\">İsim</label>\r\n            <input type=\"text\" name=\"name\" />\r\n          </div>\r\n          <div className=\"formGroup\">\r\n            <label>Cinsiyet</label>\r\n            <select name=\"gender\">\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"formGroup\">\r\n            <label>Grup</label>\r\n            <select name=\"group\">\r\n              <option value=\"destek\">Destek</option>\r\n              <option value=\"muhasebe\">Muhasebe</option>\r\n              <option value=\"analiz\">Analiz</option>\r\n              <option value=\"yazilim\">Yazılım</option>\r\n              <option value=\"yonetim\">Yönetim</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"formGroup\">\r\n            <label>İşe Giriş Tarihi</label>\r\n            <input type=\"date\" name=\"startDate\" />\r\n          </div>\r\n          <div className=\"formGroup\">\r\n            <label>İşten Çıkış Tarihi</label>\r\n            <input type=\"date\" name=\"quitDate\" />\r\n          </div>\r\n          <button type=\"submit\" className=\"button submitButton\">Ekle</button>\r\n        </div>\r\n        <div className=\"formGroupContainer2\">\r\n          <button type=\"button\" onClick={handleClick} className=\"button clickButton\">\r\n            Grafikleri Göster\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst Graphs = ({\r\n  maleInfo,\r\n  femaleInfo,\r\n  destekInfo,\r\n  muhasebeInfo,\r\n  analizInfo,\r\n  yazilimInfo,\r\n  yonetimInfo,\r\n}) => {\r\n  const graph1 = {\r\n    series: [\r\n      {\r\n        name: \"Erkek\",\r\n        data: [\r\n          maleInfo.averageMaleWorkDays,\r\n          maleInfo.minMaleWorkDays,\r\n          maleInfo.maxMaleWorkDays,\r\n        ],\r\n      },\r\n      {\r\n        name: \"Kadın\",\r\n        data: [\r\n          femaleInfo.averageFemaleWorkDays,\r\n          femaleInfo.minFemaleWorkDays,\r\n          femaleInfo.maxFemaleWorkDays,\r\n        ],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"65%\",\r\n          endingShape: \"rounded\",\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Ortalama işte kalma süresi\",\r\n          \"En az işte kalma süresi\",\r\n          \"En çok işte kalma süresi\",\r\n        ],\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Gün sayısı\",\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const graph2 = {\r\n    series: [\r\n      {\r\n        name: \"Ortalama işte kalma süresi\",\r\n        data: [\r\n          destekInfo.averageDestekGroupWorkDays,\r\n          muhasebeInfo.averageMuhasebeGroupWorkDays,\r\n          analizInfo.averageAnalizGroupWorkDays,\r\n          yazilimInfo.averageYazilimGroupWorkDays,\r\n          yonetimInfo.averageYonetimGroupWorkDays,\r\n        ],\r\n      },\r\n      {\r\n        name: \"En çok işte kalma süresi\",\r\n        data: [\r\n          destekInfo.maxDestekGroupWorkDays,\r\n          muhasebeInfo.maxMuhasebeGroupWorkDays,\r\n          analizInfo.maxAnalizGroupWorkDays,\r\n          yazilimInfo.maxYazilimGroupWorkDays,\r\n          yonetimInfo.maxYonetimGroupWorkDays,\r\n        ],\r\n      },\r\n      {\r\n        name: \"En az işte kalma süresi\",\r\n        data: [\r\n          destekInfo.minDestekGroupWorkDays,\r\n          muhasebeInfo.minMuhasebeGroupWorkDays,\r\n          analizInfo.minAnalizGroupWorkDays,\r\n          yazilimInfo.minYazilimGroupWorkDays,\r\n          yonetimInfo.minYonetimGroupWorkDays,\r\n        ],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"65%\",\r\n          endingShape: \"rounded\",\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        categories: [\"Destek\", \"Muhasebe\", \"Analiz\", \"Yazılım\", \"Yönetim\"],\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Gün sayısı\",\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chartGroup\">\r\n      <div className=\"chartOne\">\r\n        <h1>Cinsiyete Göre İşte Kalma Süreleri</h1>\r\n        <Chart\r\n          options={graph1.options}\r\n          series={graph1.series}\r\n          type=\"bar\"\r\n          width={500}\r\n          height={320}\r\n        />\r\n      </div>\r\n      <div className=\"chartTwo\">\r\n      <h1>Gruba Göre İşte Kalma Süreleri</h1>\r\n        <Chart\r\n          options={graph2.options}\r\n          series={graph2.series}\r\n          type=\"bar\"\r\n          width={800}\r\n          height={320}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport AddEmployee from \"./components/AddEmployee\";\nimport Graphs from \"./components/Graphs\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [showGraphs, setShowGraphs] = useState(false);\n  const [maleInfo, setMaleInfo] = useState([]);\n  const [femaleInfo, setFemaleInfo] = useState([]);\n  const [destekInfo, setDestekInfo] = useState([]);\n  const [muhasebeInfo, setMuhasebeInfo] = useState([]);\n  const [analizInfo, setAnalizInfo] = useState([]);\n  const [yazilimInfo, setYazilimInfo] = useState([]);\n  const [yonetimInfo, setYonetimInfo] = useState([]);\n\n  console.log(destekInfo);\n  return (\n    <div className=\"App\">\n      <AddEmployee\n        employees={employees}\n        setEmployees={setEmployees}\n        showGraphs={showGraphs}\n        setShowGraphs={setShowGraphs}\n        setMaleInfo={setMaleInfo}\n        setFemaleInfo={setFemaleInfo}\n        setDestekInfo={setDestekInfo}\n        setMuhasebeInfo={setMuhasebeInfo}\n        setAnalizInfo={setAnalizInfo}\n        setYazilimInfo={setYazilimInfo}\n        setYonetimInfo={setYonetimInfo}\n      />\n      {showGraphs && (\n        <Graphs\n          maleInfo={maleInfo}\n          femaleInfo={femaleInfo}\n          destekInfo={destekInfo}\n          muhasebeInfo={muhasebeInfo}\n          analizInfo={analizInfo}\n          yazilimInfo={yazilimInfo}\n          yonetimInfo={yonetimInfo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}